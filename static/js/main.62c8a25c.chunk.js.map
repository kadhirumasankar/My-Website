{"version":3,"sources":["components/Page/PageHeader/PageHeader.js","components/Page/Navbar/Navbar.js","components/Page/PageBody/ProjectSection/ProjectCard/ProjectCard.js","components/Page/PageBody/ProjectSection/ProjectSection.js","components/Page/PageBody/PageBody.js","components/Page/Page.js","App.js","serviceWorker.js","index.js","components/Page/PageHeader/ProfilePicture.png"],"names":["PageHeader","react_default","a","createElement","id","src","profilePicture","style","color","Icon","name","Navbar","circular","href","target","ProjectCard","detailsList","this","props","details","map","detail","i","key","languageBackgroundColor","language","console","log","title","backgroundColor","githubUrl","size","date","imageUrl","React","Component","ProjectSection","projects","info","data","ProjectSection_ProjectCard_ProjectCard","PageBody","PageBody_ProjectSection_ProjectSection","projectData","Page","Page_PageHeader_PageHeader","Page_Navbar_Navbar","Page_PageBody_PageBody","App","className","components_Page_Page","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.62c8a25c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './PageHeader.css';\r\nimport {Icon} from 'semantic-ui-react'\r\nimport profilePicture from './ProfilePicture.png'\r\n\r\nfunction PageHeader() {\r\n  return(\r\n    <div id=\"header-container\">\r\n      <div>\r\n\r\n      </div>\r\n      <div id=\"header-text\">\r\n        <div>\r\n          <img id=\"header-image\" src={profilePicture} /><br />\r\n          <div id=\"text\">\r\n            Hi, I&#39;m&nbsp;<b>Kadhir Umasankar</b>.<br />\r\n            ASE student <b style={{color:\"#bb5826\"}}>@UTAustin</b>.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"header-bottom-text\">\r\n        Scroll to see my work<br />\r\n        <Icon name='caret down' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageHeader\r\n","import React from 'react';\r\nimport './Navbar.css';\r\nimport {Icon} from 'semantic-ui-react'\r\n\r\nfunction Navbar() {\r\n  return(\r\n    <div id=\"navbar-grid\">\r\n      <div>\r\n        <span id=\"navbar-email\"><Icon name='mail' circular />kadhirus99@gmail.com</span>\r\n      </div>\r\n      <div>\r\n        <a id=\"navbar-link\" href=\"https://www.linkedin.com/in/kadhirus99/\" target=\"_blank\">\r\n          <Icon name='linkedin' circular/>linkedin.com/in/kadhirus99\r\n        </a>\r\n      </div>\r\n      <div>\r\n        <a id=\"navbar-link\" href=\"https://github.com/kadhirumasankar\" target=\"_blank\">\r\n          <Icon name='github' circular/>github.com/kadhirumasankar\r\n        </a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport './ProjectCard.css'\r\nimport {Icon} from 'semantic-ui-react'\r\n\r\nclass ProjectCard extends React.Component{\r\n\r\n  render(){\r\n    const detailsList = this.props.details\r\n    const details = detailsList.map((detail,i) => {\r\n      return(<li key={i}>{detail}</li>)\r\n    })\r\n    const languageBackgroundColor = this.props.language[1]\r\n\r\n    console.log(detailsList)\r\n    return(\r\n      <div id=\"card\">\r\n        <div id=\"card-header\">\r\n          <div id=\"card-title\">\r\n            {this.props.title}\r\n          </div>\r\n          <div id=\"card-header-details\">\r\n            <div id=\"card-header-language\" style={{backgroundColor: languageBackgroundColor}}>\r\n              {this.props.language[0]}\r\n            </div>\r\n            {this.props.githubUrl ? <a id=\"card-buttons\" href={this.props.githubUrl} target=\"_blank\"><Icon name='github' size=\"big\"/></a> : null}\r\n          </div>\r\n        </div>\r\n        <div id=\"card-date\">\r\n          {this.props.date}\r\n        </div>\r\n        <div id=\"card-content\">\r\n          <div id=\"card-details\">\r\n            <ul>\r\n              {details}\r\n            </ul>\r\n\r\n          </div>\r\n          <div id=\"image-container\">\r\n            <img src={this.props.imageUrl}/>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProjectCard\r\n","import React from 'react';\r\nimport './ProjectSection.css';\r\nimport ProjectCard from './ProjectCard/ProjectCard'\r\n\r\nclass ProjectSection extends React.Component {\r\n\r\n  render(){\r\n\r\n    const projects = this.props.info.map((data) => {\r\n      return (<ProjectCard key={data.key} title={data.title} date={data.date} language={data.language} imageUrl={data.imageUrl} details={data.details} githubUrl={data.githubUrl}/>)\r\n    })\r\n\r\n    return(\r\n      <div id=\"projects\">\r\n        {projects}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProjectSection\r\n","import React from 'react';\r\nimport './PageBody.css';\r\nimport projectData from './ProjectSection/projectData.json'\r\nimport ProjectSection from './ProjectSection/ProjectSection'\r\n\r\nclass PageBody extends React.Component {\r\n\r\n  render(){\r\n    return(\r\n      <div id=\"page-body\">\r\n        <ProjectSection info={projectData}/>\r\n        {/*<Section title=\"Education\" info={educationData}/>\r\n        <Section title=\"Collegiate Activities\" info={collegiateActivitiesData}/>*/}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PageBody\r\n","import React from 'react';\r\nimport './Page.css';\r\nimport PageHeader from './PageHeader/PageHeader'\r\nimport Navbar from './Navbar/Navbar'\r\nimport PageBody from './PageBody/PageBody'\r\n\r\nfunction Page() {\r\n  return(\r\n    <div id=\"page-container\">\r\n      <PageHeader />\r\n      <Navbar />\r\n      <PageBody />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import React from 'react';\nimport './App.css';\nimport Page from './components/Page/Page'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Page />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ProfilePicture.421d75ca.png\";"],"sourceRoot":""}